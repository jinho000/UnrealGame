- 언리얼에서 C++ 클래스의 동작
1 언리얼 프로젝트에서 언리얼의 클래스를 상속받은 C++ 클래스 생성
2 C++ 클래스 작성 후 빌드
3 언리얼 프로젝트에서 작성한 C++클래스를 상속받은 블루프린트 생성
4 블루프린트를 월드에 배치 

- C++ 클래스 생성시 public, private
C++프로젝트에 public, private 폴더 생성


- 언리얼 클래스의 A, U 접두사
AClass: 엑터 클래스로부터 파생된 클래스를 의미
UClass: 언리얼 오브젝트로부터 파생된 클래스를 의미


- 언리얼 로그 매크로
UE_LOG(로그 카테고리, 로그 수준, 출력될 텍스트);


- 언리얼의 스트링
FString
언리얼 에디터의 인코딩과 실행된 언리얼상에서의 인코딩이 달라 깨짐현상 있음
텍스트 사용시 인코딩은 유니코드방식으로 바꿔야함
-> TEXT()매크로 사용


- 언리얼 리플렉션(Reflection)
굳이 플레이를 하지 않아도 언리얼 엔진에서 코드에 구현된 클래스, 변수, 함수등을 미리 읽고 조사하는 기능


- UPROPERTY 시스템
리플렉션 기능에 등록해서 변수를 읽고 수정 가능 여부를 설정하기위한 시스템
변수 앞쪽에 UPROPERTY 키워드를 등록

변수 옵션
EditAnyWhere: 어디서든 읽고 쓸 수 있음
VisibleAnyWhere: 어디서든 읽기만 가능
EditInstanceOnly: 월드에 생성된 인스턴스에서만 읽고 수정 가능
EditDefaultsOnly: 블루프린트 기본 설정창에서만 일거 수정가능
VisibleInstanceOnly: 월드에 배치한 인스턴스에서만 보기 가능
VisibleDefaultsOnly: 블루프린트 설정창에서만 보기 가능

비주얼 스크립팅 옵션
BlueprintReadWrite: 블루프린트 설정창에서 읽고 쓸수 있음
BlueprintReadOnly: 블루프린트 설정창에서 읽기만 가능


- UFUNCTION 시스템
변수의 UPROPERTY처럼 함수도 리플렉션에 기능에 등록 해두고 에디터상에서 처리 가능

BlueprintCallable: 블루프린트 상에서 실행 연결 가능
BlueprintPure: 블루프린트 상에서 값만 읽어오기 가능

- 클래스 변수설정
클래스에 작성한 변수는 블루프린트의 detail 창에서 조작가능


- UI
CreateWidget<>
위젯 생성

AddToViewport
뷰포트에 위젯 추가

SetText
TextBlock의 텍스트 수정


